name: Build Quarkus Application
on: 
  push:
    branches: [ main ]

env:
  OPENSHIFT_NAMESPACE: github-runner
  APP_NAME: "simple-quarkus-service-gh-action"
  TAGS: -${{ github.sha }}

  AZURE_KEY_VAULT: githubaction-vault1
  AZURE_CREDENTIALS:  ${{ secrets.AZURE_CREDENTIALS }}

jobs:
  retrieve_secrets: 
    name: Retrieve Secrets
    runs-on: [  self-hosted, macOS, X64 ]

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Retrieve Key Vault Secrets
        id: az_secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ env.AZURE_KEY_VAULT }}
          secrets: 'ocp-server,ocp-github-actions-sa-token, gh-access-pat'

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ steps.az_secrets.outputs.ocp-server }}
          openshift_token: ${{ steps.az_secrets.outputs.ocp-github-actions-sa-token }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
      
      - uses: redhat-actions/openshift-actions-runner-installer@v1 
        with: 
          github_pat: ${{ steps.az_secrets.outputs.gh-access-pat }} 
          runner_labels: openshift, java
          # runner_location: redhat-actions                               
          runner_image: quay.io/redhat-github-actions/java-runner-11  
  build-deploy: 
    name: Self Hosted OCP Build and Deploy
    runs-on: [ self-hosted, openshift, java ]          
    needs: retrieve_secrets                               

    env:
      WORKDIR: .                  

    steps:
      - uses: actions/checkout@v3
        with:
          repository: froberge/ocp-githubaction-azurevault-demo

      - name: Determine image tags
        if: env.IMAGE_TAGS == ''
        run: |
          echo "IMAGE_TAGS=latest ${GITHUB_SHA::12}" | tee -a $GITHUB_ENV

      - name: Setup S2I and Build container
        id: build_image
        uses: redhat-actions/s2i-build@v2
        with:
          image: ${{ env.APP_NAME }}
          tags: ${{ env.IMAGE_TAGS }}
          builder_image: 'registry.access.redhat.com/openjdk/openjdk-11-rhel7'

      - name: Push to registry
        id: push-image
        uses: redhat-actions/push-to-registry@v2
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ env.IMAGE_REGISTRY }}
          username: ${{ steps.vaultSecrets.outputs.registry-user}}
          password: ${{ steps.vaultSecrets.outputs.registry-pwd }}

      # The path the image was pushed to is now stored in ${{ steps.push-image.outputs.registry-path }}
      - name: Install oc
        uses: redhat-actions/openshift-tools-installer@v1
        with:
          oc: 4

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ steps.vaultSecrets.outputs.ocp-server }}
          openshift_token: ${{ steps.vaultSecrets.outputs.ocp-github-actions-sa-token }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}

      # This step should create a deployment, service, and route to run your app and expose it to the internet.
      - name: Create and expose app
        id: deploy-and-expose
        uses: redhat-actions/oc-new-app@v1
        with:
          app_name: ${{ env.APP_NAME }}
          image: ${{ steps.push-image.outputs.registry-path }}
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
          port: ${{ env.APP_PORT }}          