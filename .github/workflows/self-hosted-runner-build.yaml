name: Build project on Self-Hosted runner
on: 
  push: 

env:
  OPENSHIFT_NAMESPACE: github-runner
  APP_NAME: "simple-quarkus-service-gh-action"
  TAGS: latest-${{ github.sha }}
  # IMAGE_REGISTRY: quay.io/froberge

  AZURE_KEY_VAULT: githubaction-vault1
  AZURE_CREDENTIALS:  ${{ secrets.AZURE_CREDENTIALS }}

jobs: 
  install_runner: 
    name: Install Runner 
    runs-on: ubuntu-20.04

    steps:
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ env.AZURE_CREDENTIALS }}

      - name: Retrieve Key Vault Secrets
        id: az_secrets
        uses: Azure/get-keyvault-secrets@v1
        with:
          keyvault: ${{ env.AZURE_KEY_VAULT }}
          secrets: 'registry-user,registry-pwd,ocp-server,ocp-github-actions-sa-token, gh-access-pat'

      - name: Log in to OpenShift
        uses: redhat-actions/oc-login@v1
        with:
          openshift_server_url: ${{ steps.az_secrets.outputs.ocp-server }}
          openshift_token: ${{ steps.az_secrets.outputs.ocp-github-actions-sa-token }}
          insecure_skip_tls_verify: true
          namespace: ${{ env.OPENSHIFT_NAMESPACE }}
      
      - uses: redhat-actions/openshift-actions-runner-installer@v1 
        with: 
          github_pat: ${{ steps.az_secrets.outputs.gh-access-pat }} 
          runner_labels: openshift, java
          # runner_location: redhat-actions                               
          runner_image: quay.io/redhat-github-actions/java-runner-11 
  
  build-quarkus: 
    name: Self Hosted Quarkus Build and Test
    runs-on: [ self-hosted, openshift, java ]          
    needs: install_runner                               

    env:
      WORKDIR: .                  

    steps:
      - uses: actions/checkout@v3
        with:
          repository: froberge/ocp-githubaction-azurevault-demo

      - name: Install and build
        run: ./mvnw install -ntp
        working-directory: ${{ env.WORKDIR }}

      - name: Run tests
        run: ./mvnw test
        working-directory: ${{ env.WORKDIR }}

      - name: Upload jar artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.APP_NAME}}-${{env.TAGS}}.zip 
          path: ${{ env.WORKDIR }}/target/*.jar
          